<section class="word-detail">
  <a href="<%= wordIDs.befWordID ? `/user/bookmark/show/${wordIDs.befWordID}` : '#' %>" 
    class="back-link" 
    style="<%= wordIDs.befWordID ? '' : 'visibility: hidden;' %>">&lt; 이전 단어</a>
 
 <a href="<%= wordIDs.nxtWordID ? `/user/bookmark/show/${wordIDs.nxtWordID}` : '#' %>" 
    class="front-link" 
    style="<%= wordIDs.nxtWordID ? '' : 'visibility: hidden;' %>">다음 단어 &gt;</a>
 

  <div class="word-title">
    <h2><%= data.word %></h2>
    <button class="star-button" aria-label="Bookmark" onclick="toggleBookmark(<%= bookmark.saved %>, this)">
      <%= bookmark.saved === 0 ? '☆' : '★' %>
    </button>
  </div>

  <section class="word-content">
    <!-- <p class="word-item"><strong>단어:</strong> <%= data.word %></p> -->
    <p class="word-item"><strong>발음:</strong> <%= data.pronunciation || '정보 없음' %></p>

    <ul class="meanings-list">
      <% data.meanings.forEach((meaning) => { %>
        <li class="meaning-item">
          <h3 class="meaning-title">뜻</h3>
          <p class="word-item"><strong>품사:</strong> <%= meaning.partOfSpeech %></p>
          <p class="word-item"><strong>뜻:</strong> <%= meaning.meaning %></p>
          <h4 class="examples-title">예문</h4>
          <ul class="examples-list">
            <% meaning.examples.forEach((example) => { %>
              <li class="example-item">
                <p class="word-item"><strong>문장:</strong> <%= example.example %></p>
                <p class="word-item"><strong>해석:</strong> <%= example.translation %></p>
              </li>
            <% }) %>
          </ul>
        </li>
      <% }) %>
    </ul>
  </section>
</section>

<script>
  async function toggleBookmark(saved, button) {
    button.innerHTML = '☆';

    const userID = '<%= bookmark.userID %>';
    const wordID = '<%= bookmark.wordID %>';
  
    const url = `/user/bookmark/${wordID}`;
    const options = saved === 0 
      ? {
        method: 'POST', 
        body: JSON.stringify({ userID, wordID }),
        headers: {'Content-Type': 'application/json' }
      }
      : {
        method: 'DELETE',
        headers: {'Content-Type': 'application/json' }
      };

    try {
      const response = await fetch(url, options);
      if (response.ok) {
        console.log("이상 없음");        
      } else {
        console.error("응답 오류 발생");
      }

    } catch (error) {
      console.error("network error: ", error);
    }
  };
</script>